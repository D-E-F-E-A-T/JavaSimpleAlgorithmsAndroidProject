<resources>
    <string name="app_name">JavaAlgorithmsRecipes</string>

    <string name="error">error</string>
    <string name="title">title</string>
    <string name="options">options</string>
    <string name="settings_area">settings</string>
    <string name="press_twice">press twice</string>
    <string name="progress">progress</string>
    <string name="desc">description</string>
    <string name="index0">"public int GCD(int a, int b) {\n"
                        "        if (b==0)\n"
                        "            return a;\n"
                        "        else\n"
                        "            return GCD(b,a%b);\n"
                        "    }\n"
                        "\n"
                        "// Short example: \n"
                        "// GCD(8,12){\n"
                        "//   GCD(12,4);\n"
                        "// }GCD(4,0){\n"
                        "//   b==0 so we return 4;\n"
                        "// }"</string>
    <string name="index1">"public class CaesarCypher {\n"
                "    static String caesarChiper(String arg){\n"
                "        String result = \"\";\n"
                "        for (int i=0; i &lt; arg.length(); i++){\n"
                "            result+=(arg.charAt(i)=='z'||arg.charAt(i)=='Z')?\n"
                "                    (char)(arg.charAt(i)-(25)):\n"
                "                    (char)(arg.charAt(i)+(1));\n"
                "\n"
                "        }\n"
                "        return result;\n"
                "    }\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        System.out.println(caesarChiper(\"abc\"));\n"
                "    }\n"
                "}"</string>
    <string name="index2">
                "char A = (char)Integer.valueOf(\"01000001\", 2).intValue();\n"
                "char B = (char)Integer.valueOf(\"01000010\", 2).intValue();\n"
                "char C = (char)Integer.valueOf(\"01000011\", 2).intValue();\n"
                "char D = (char)Integer.valueOf(\"01100100\", 2).intValue();\n"
                "char E = (char)Integer.valueOf(\"01100101\", 2).intValue();\n"
                "char F = (char)Integer.valueOf(\"01100110\", 2).intValue();\n"
                "char G = (char)Integer.valueOf(\"01100111\", 2).intValue();\n"
                "char H = (char)Integer.valueOf(\"01101000\", 2).intValue();\n"
                "char I = (char)Integer.valueOf(\"01101001\", 2).intValue();\n"
                "char J = (char)Integer.valueOf(\"01101010\", 2).intValue();\n"
                "char K = (char)Integer.valueOf(\"01101011\", 2).intValue();\n"
                "char L = (char)Integer.valueOf(\"01101100\", 2).intValue();\n"
                "char M = (char)Integer.valueOf(\"01101101\", 2).intValue();\n"
                "char N = (char)Integer.valueOf(\"01101110\", 2).intValue();\n"
                "char O = (char)Integer.valueOf(\"01101111\", 2).intValue();\n"
                "char P = (char)Integer.valueOf(\"01110000\", 2).intValue();\n"
                "char R = (char)Integer.valueOf(\"01010010\", 2).intValue();\n"
                "char S = (char)Integer.valueOf(\"01010011\", 2).intValue();\n"
                "char T = (char)Integer.valueOf(\"01010100\", 2).intValue();\n"
                "char U = (char)Integer.valueOf(\"01010101\", 2).intValue();\n"
                "char V = (char)Integer.valueOf(\"01010110\", 2).intValue();\n"
                "char W = (char)Integer.valueOf(\"01010111\", 2).intValue();\n"
                "char X = (char)Integer.valueOf(\"01011000\", 2).intValue();\n"
                "char Y = (char)Integer.valueOf(\"01011001\", 2).intValue();\n"
                "char Z = (char)Integer.valueOf(\"01011010\", 2).intValue();\n"
                "\n"
                "// ASCII TABLE:\n"
                "// Dec Hex\tBinary\tCharacter Description\n"
                "// 65\t41\t01000001\tA\t \n"
                "// 66\t42\t01000010\tB\t \n"
                "// 67\t43\t01000011\tC\t \n"
                "// 68\t44\t01000100\tD\t \n"
                "// 69\t45\t01000101\tE\t \n"
                "// 70\t46\t01000110\tF\t \n"
                "// 71\t47\t01000111\tG\t \n"
                "// 72\t48\t01001000\tH\t \n"
                "// 73\t49\t01001001\tI\t \n"
                "// 74\t4A\t01001010\tJ\t \n"
                "// 75\t4B\t01001011\tK\t \n"
                "// 76\t4C\t01001100\tL\t \n"
                "// 77\t4D\t01001101\tM\t \n"
                "// 78\t4E\t01001110\tN\t \n"
                "// 79\t4F\t01001111\tO\t \n"
                "// 80\t50\t01010000\tP\t \n"
                "// 81\t51\t01010001\tQ\t \n"
                "// 82\t52\t01010010\tR\t \n"
                "// 83\t53\t01010011\tS\t \n"
                "// 84\t54\t01010100\tT\t \n"
                "// 85\t55\t01010101\tU\t \n"
                "// 86\t56\t01010110\tV\t \n"
                "// 87\t57\t01010111\tW\t \n"
                "// 88\t58\t01011000\tX\t \n"
                "// 89\t59\t01011001\tY\t \n"
                "// 90\t5A\t01011010\tZ\t \n"
                "// 91\t5B\t01011011\t[\tleft square bracket\n"
                "// 92\t5C\t01011100\t\\\tbackslash\n"
                "// 93\t5D\t01011101\t]\tright square bracket\n"
                "// 94\t5E\t01011110\t^\tcaret / circumflex\n"
                "// 95\t5F\t01011111\t_\tunderscore\n"
                "// 96\t60\t01100000\t`\tgrave / accent\n"
                "// 97\t61\t01100001\ta\t \n"
                "// 98\t62\t01100010\tb\t \n"
                "// 99\t63\t01100011\tc\t \n"
                "// 100\t64\t01100100\td\t \n"
                "// 101\t65\t01100101\te\t \n"
                "// 102\t66\t01100110\tf\t \n"
                "// 103\t67\t01100111\tg\t \n"
                "// 104\t68\t01101000\th\t \n"
                "// 105\t69\t01101001\ti\t \n"
                "// 106\t6A\t01101010\tj\t \n"
                "// 107\t6B\t01101011\tk\t \n"
                "// 108\t6C\t01101100\tl\t \n"
                "// 109\t6D\t01101101\tm\t \n"
                "// 110\t6E\t01101110\tn\t \n"
                "// 111\t6F\t01101111\to\t \n"
                "// 112\t70\t01110000\tp\t \n"
                "// 113\t71\t01110001\tq\t \n"
                "// 114\t72\t01110010\tr\t \n"
                "// 115\t73\t01110011\ts\t \n"
                "// 116\t74\t01110100\tt\t \n"
                "// 117\t75\t01110101\tu\t \n"
                "// 118\t76\t01110110\tv\t \n"
                "// 119\t77\t01110111\tw\t \n"
                "// 120\t78\t01111000\tx\t \n"
                "// 121\t79\t01111001\ty\t \n"
                "// 122\t7A\t01111010\tz\n"
                "\n"
                "\n"
                "\n"
                "\n"
                "//messageFromBinaryCode\n"
                "String messageFromBinaryCode(String binaryCodeString) {\n"
                "    String output = \"\";   \n"
                "    char nextChar;\n"
                "\n"
                "    for (int i = 0; i &lt;= binaryCodeString.length()-8; i += 8) { \n"
                "         nextChar = (char)Integer.parseInt(binaryCodeString.substring(i, i+8), 2);\n"
                "         output += nextChar;\n"
                "    }\n"
                "    return output;\n"
                "}"</string>
    <string name="index3">"package com.company;\n"
                "import java.util.Arrays;\n"
                "\n"
                "public class BubbleSort  {\n"
                "    public static int[] bubbleSort(int arr[]) {\n"
                "        //from the first digit to the last digit from the array\n"
                "        for (int i = 0; i &lt; arr.length; i++) {\n"
                "            //comparing all digits x times length of the array - 1\n"
                "            //because we have to get rid of the actual digit that \n"
                "            //we are comparing with other digits\n"
                "            for (int j = 0; j &lt; arr.length-1; j++) {\n"
                "                //if statement is true we swap digits\n"
                "                if(arr[j]>arr[j+1]) {\n"
                "                    int temp=arr[j];\n"
                "                    arr[j]=arr[j+1];\n"
                "                    arr[j+1]=temp;\n"
                "                }\n"
                "            }\n"
                "        }\n"
                "        return arr;\n"
                "    }\n"
                "}"</string>
    <string name="index4">"import java.util.ArrayList;\nimport java.util.Arrays;
                \n"
                "public class CharToByte_ByteToChar{    \n"
                "        \n"
                "static void charToByte_ASCII(String str) {\n"
                "        char[] buffer = str.toCharArray();\n"
                "        byte[] b = new byte[buffer.length];\n"
                "        for (int i = 0; i &lt; b.length; i++) {\n"
                "            b[i] = (byte) buffer[i];\n"
                "        }\n"
                "        String result = Arrays.toString(b);\n"
                "        System.out.println(result);\n"
                "    }\n"
                "    static void byteToChar_ASCII(int[] ints){\n"
                "        char[] chars = new char[ints.length];\n"
                "        for (int i=0; i &lt; ints.length; i++){\n"
                "            chars[i] = (char)ints[i];\n"
                "        }\n"
                "        System.out.println(Arrays.toString(chars));\n"
                "    }\n"
                "        \n"
                "        static void charToByte2(char[] chars){\n"
                "        byte[] bytes = new byte[chars.length];\n"
                "        for (int i =0; i &lt; bytes.length; i++){\n"
                "            bytes[i]=(byte) chars[i];\n"
                "        }\n"
                "        System.out.println(Arrays.toString(bytes));\n"
                "    }\n"
                "\n"
                "public static void main(String[] args) {\n"
                "        String letters = \"ABC\";\n"
                "        int[] ascii_chars = {65,66,67};\n"
                "        ASCIItoChar(ascii_chars);\n"
                "        stringToBytesASCII(letters);\n"
                " }\n"
                "}\n"
                "\n"
                "//output\n"
                "//[A, B, C]\n"
                "//[65, 66, 67]"</string>
    <string name="index5">"public class Class {\n"
                "\n"
                "// Java provides a class with name Class in java.lang package.\n"
                "// Instances of the class Class represent classes and interfaces in a running Java application.\n"
                "// The primitive Java types (boolean, byte, char, short, int, long, float, and double),\n"
                "// and the keyword void are also represented as Class objects. It has no public constructor.\n"
                "// Class objects are constructed automatically by the Java Virtual Machine(JVM).\n"
                "// It is a final class, so we cannot extend it.\n"
                "\n"
                "\n"
                "\n"
                "    public static void main(String[] args) throws\n"
                "            ClassNotFoundException,\n"
                "            IllegalAccessException,\n"
                "            InstantiationException {\n"
                "\n"
                "        Class cl_class = Class.forName(\"Chicken\");\n"
                "        Class cl_int = int.class;\n"
                "        Class cl_string = Class.forName(\"java.lang.String\");\n"
                "        Class cl_void = void.class;\n"
                "        ClassLoader loader = cl_class.getClassLoader();\n"
                "        Class chickenLoader = Class.forName(\"Chicken\", true, loader);\n"
                "\n"
                "        System.out.println(chickenLoader.toString());\n"
                "        System.out.println(\"What is this class ? \"\n"
                "                + cl_class.getSimpleName());\n"
                "\n"
                "        Class cl_main = Class.forName(\"Main\");\n"
                "        Class cl_obj = Class.forName(\"java.lang.Object\");\n"
                "        Class chickClass = Class.forName(\"Chicken\");\n"
                "        Object newChicken = chickClass.newInstance();\n"
                "        System.out.println(\"Type of newChiken: \" + newChicken.getClass());\n"
                "\n"
                "        String s = \"Kaizen\";\n"
                "        int ten = 10_000;\n"
                "        System.out.println(\"kaizen is string ? \" +\n"
                "                cl_string.isInstance(s) + \"\\n\" +\n"
                "        \"ten is String ? \" + cl_string.isInstance(ten));\n"
                "        System.out.println(\"Object is assignable from Main ? \"\n"
                "                + cl_obj.isAssignableFrom(cl_main));\n"
                "\n"
                "        Class fish = Fish.class;\n"
                "        System.out.println(\"is fish primitive ? \" +\n"
                "                fish.isPrimitive());\n"
                "        System.out.println(fish.getSimpleName());\n"
                "\n"
                "    }\n"
                "}"</string>
    <string name="index6">"//counter SAME chars\n"
                        "public static int countChar(String str, char ch){\n"
                        "        int count=0;\n"
                        "        while (str.indexOf(ch)!=-1){\n"
                        "            count++;\n"
                        "            str=str.substring((str.indexOf(ch)+1));\n"
                        "        }\n"
                        "        return count;\n"
                        "    }\n"
                        "    public static void lineEncoding(String str){\n"
                        "       str = str.replace(\" \", \"\");\n"
                        "       while (str.length() > 0){\n"
                        "           char ch = str.charAt(0);\n"
                        "           int count = countChar(str, ch);\n"
                        "           System.out.println(ch + \" \" + count);\n"
                        "           str = str.replace(\"\"+ch,\"\");\n"
                        "       }\n"
                        "    }\n"
                        "//counter EACH char\n"
                        "static String lineEncoding(String string) {\n"
                        "        //adding non-char character to make the length of the string + 1\n"
                        "        string += \"#\";\n"
                        "        int counter = 1;\n"
                        "        StringBuilder result = new StringBuilder();\n"
                        "        //iterating from 1 to length of the string\n"
                        "        for (int i = 1; i &lt; string.length(); i++) {\n"
                        "            //compare char from index 1 to index 0\n"
                        "            if (string.charAt(i) == string.charAt(i - 1)) {\n"
                        "                //if true add 1 to counter\n"
                        "                counter++;\n"
                        "                //after finishing with counter the same letter we add\n"
                        "                //the letter to stringbuilder like this: 3a\n"
                        "            } else {\n"
                        "                if (counter > 1) {\n"
                        "                    //append counter first\n"
                        "                    result.append(counter);\n"
                        "                }\n"
                        "                //append letter\n"
                        "                result.append(string.charAt(i-1));\n"
                        "                //reset counter\n"
                        "                counter=1;\n"
                        "            }\n"
                        "        }\n"
                        "        return result.toString();\n"
                        "    }"</string>
    <string name="index7">"public class CapitalizeFirstLetter {\n"
                "    static Scanner sc = new Scanner(System.in);\n"
                "    static String goAhead(){\n"
                "        String result = null;\n"
                "        int sum = 0;\n"
                "        System.out.println(\"Please input two strings: \");\n"
                "        String one = sc.nextLine(); //use next for one word or\n"
                "        // nextLine for more words in one line\n"
                "        String two = sc.nextLine();\n"
                "\n"
                "        sum = one.length() + two.length();\n"
                "        System.out.println(\"sum = \" + sum);\n"
                "\n"
                "        if (one.compareToIgnoreCase(two) > 0) // one higher than two\n"
                "            System.out.println(\"one is higher\");\n"
                "        else if (one.compareToIgnoreCase(two) == 0) // equal\n"
                "            System.out.println(\"one is equal to two\");\n"
                "        else if (one.compareToIgnoreCase(two) &lt; 0) // two higher than one if negative value\n"
                "            System.out.println(\"two is higher\");\n"
                "\n"
                "        //uppercasing the first letter and concatenate with the rest of the string\n"
                "        String resultOne = one.substring(0,1).toUpperCase()+one.substring(1,one.length());\n"
                "        String resultTwo = two.substring(0,1).toUpperCase()+two.substring(1,two.length());\n"
                "        result = resultOne + \" \" + resultTwo;\n"
                "        System.out.println(result);\n"
                "        return result;\n"
                "    }\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        goAhead();\n"
                "    }\n"
                "}"</string>
    <string name="index8">"public class EvenDigits {\n"
                "    static int len = 0;\n"
                "    static boolean evenDigitsOnly(int n) {\n"
                "        boolean isEven = true;\n"
                "        len = (int) (Math.log10(n)+1);\n"
                "        int[] arr = new int[len];\n"
                "        for (int i=0; i &lt; len;i++,n = n/10){ // get last digit\n"
                "            arr[i] = n % 10; // put last digit in arr[i]\n"
                "        }\n"
                "        for (int i = 0; i &lt; len;i++){\n"
                "            if (arr[i]%2!=0) {\n"
                "                isEven = false;\n"
                "            }\n"
                "        }\n"
                "        return isEven;\n"
                "    }\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        int x = 24682;\n"
                "        boolean isOrNot = evenDigitsOnly(x);\n"
                "        System.out.println(isOrNot);\n"
                "       // System.out.println(len);\n"
                "//        int t = 235010;\n"
                "//        int lenOfT = (int) (Math.log10(t)+1);\n"
                "//        System.out.println(lenOfT);\n"
                "    }\n"
                "}"</string>
    <string name="index9">"public class EvenOdd {\n"
                "    static boolean goAhead(int n){\n"
                "        boolean result = false;\n"
                "        if (n%2==0)\n"
                "            result = true;\n"
                "        else\n"
                "            result = false;\n"
                "\n"
                "        System.out.println(result);\n"
                "        return result;\n"
                "    }\n"
                "}"</string>
    <string name="index10">"public class ForThePrimeNumbers {\n"
                "\n"
                "    // prime numbers are the numbers\n"
                "    // who divide with 1 and themselves only\n"
                "    static boolean isPrime(int n){\n"
                "        for(int i=2;i&lt;n;i++) {\n"
                "            if(n%i==0)\n"
                "                return false;\n"
                "        }\n"
                "        return true;\n"
                "    }\n"
                "    static boolean isPrime3(int n){\n"
                "        for(int i=2;2*i&lt;n;i++) {\n"
                "            if(n%i==0)\n"
                "                return false;\n"
                "        }\n"
                "        return true;\n"
                "    }\n"
                "    static boolean isPrime2(int n){\n"
                "        int numerator = 1;\n"
                "        for(int i=2;i&lt;=n;i++) {\n"
                "            if(n%i==0)\n"
                "                numerator++;\n"
                "        }\n"
                "        boolean result = numerator > 2 || numerator == 1 ? false : true;\n"
                "        System.out.println(\"numerator = \" + numerator);\n"
                "        System.out.println(\"result =  \" + result);\n"
                "        return result;\n"
                "    }\n"
                "    public boolean isPrimeSqrt(int n) {\n"
                "        if (n &lt; = 1) //get rid of 1 and above\n"
                "            return false;\n"
                "\n"
                "        for (int i = 2; i &lt; = Math.sqrt(n); i++) { //sqrt -> all multiple of the same number should be crossed out\n"
                "            if (n % i == 0)\n"
                "                return false;\n"
                "        }\n"
                "        System.out.println(n + \" is prime\");\n"
                "        return true;\n"
                "    }\n"
                "\n"
                "}"</string>
    <string name="index11">"class Solution{
    public static void main(String[] args){
       Class student = Student.class;
       Method[] methods = student.getDeclaredMethods();
       ArrayList&lt;String> methodList = new ArrayList&lt;>();
       for(Method method: methods){
       methodList.add(method.getName());
       }
       Collections.sort(methodList);
       for(String name: methodList){
       System.out.println(name);
       }
      }
    }"</string>
    <string name="index12">"public class GetMonthNameExample {\n"
                "    public static void main(String[] args) {\n"
                "        String[] monthName = {\"January\", \"February\",\n"
                "                \"March\", \"April\", \"May\", \"June\", \"July\",\n"
                "                \"August\", \"September\", \"October\", \"November\",\n"
                "                \"December\"};\n"
                "\n"
                "        Calendar cal = Calendar.getInstance();\n"
                "        String month = monthName[cal.get(Calendar.MONTH)];\n"
                "\n"
                "        System.out.println(\"Month name: \" + month);\n"
                "    }\n"
                "}"</string>
    <string name="index13">"public class GuessMovie {
    private boolean StringToChars(String param) {
        Scanner sc = new Scanner(System.in);
        boolean found = false;
        char[] missingLetters = new char[param.length()];
        int d = Integer.MAX_VALUE;
        char[] buffer = param.toCharArray();
        char[] chars = new char[buffer.length];
        d = chars.length;
        System.out.println("Can you guess the movie ? hint: " + param.length() + " letters");
        String c = sc.nextLine();
        char[] Cbuffer = c.toCharArray();
        char[] Cchars = new char[param.length()];
        for (int x=0; x &lt; Cchars.length; x++) {
            Cchars[x] = Cbuffer[x];
        }
        for (int i=0; i &lt; chars.length; i++) {
            chars[i] = buffer[i];
            if(chars[i] == Cchars[i]) {
                d = d - 1;
            } else if (chars[i] != Cchars[i]){
                System.out.print(\" _ \");
                missingLetters[i] = chars[i];
                found = false;
            }
            found = (d == 0);
            if (found){System.out.println(\"100% found WOW!\");}
        }
        for(char x:missingLetters){
            if (!Character.isLetter(x)){
                System.out.print("_");
            }else{
                System.out.print(x + " ");
            }
        }
        System.out.println("remained " + d + " letters unfound");
        return found;
    }
    public static void main(String[] args) {
        GuessMovie cleanCode = new GuessMovie();
        String movieName = "Hidalgo";
        try {
            cleanCode.StringToChars(movieName);
        } catch (ArrayIndexOutOfBoundsException e){
            System.out.println(\"Please input 7 letters!\");
            cleanCode.StringToChars(movieName);
        }
    }
}"</string>
    <string name="index14">"public class GuessNumber {\n"
                "    static Scanner sc = new Scanner(System.in);\n"
                "    static boolean hasWon = false;\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        int randomNumber = (int) (Math.random() * 100)+1;\n"
                "        System.out.println(\"I have randomly chosen a number between 1 and 100\");\n"
                "        System.out.println(\"Try to guess it: \");\n"
                "\n"
                "        for (int i=10;i>0;i=i-1){\n"
                "            System.out.println(\"You have \" + i + \" guess(es) left. Choose again\");\n"
                "            int guess = sc.nextInt();\n"
                "\n"
                "            if (randomNumber &lt; guess){\n"
                "                System.out.println(\"It's smaller than \" + guess + \" guess.\");\n"
                "            }else if (randomNumber > guess){\n"
                "                System.out.println(\"It's higher than \" + guess + \" guess.\");\n"
                "            } else {\n"
                "                hasWon = true;\n"
                "                break; //exit the entire for loop\n"
                "            }\n"
                "            //System.out.println(\"Your guess was: \" + guess);\n"
                "        } //end of for loop\n"
                "\n"
                "        if (hasWon){\n"
                "            System.out.println(\"You guess it! you WIN!\");\n"
                "        } else {\n"
                "            System.out.println(\"GAME OVER!\");\n"
                "            System.out.println(\"The number was: \" + randomNumber);\n"
                "        }\n"
                "    }\n"
                "}"</string>
    <string name="index15">"public static int max(Integer… vals) {
    return Collections.max(Arrays.asList(vals));
 }"</string>
    <string name="index16">"public class JavaWithoutMain {\n"
                "    static {\n"
                "        System.out.println(\"HelloWorld, Java progarm without main method\");\n"
                "        int x = 20; // Can initialize static variables\n"
                "        System.out.println(\"Variable x : \" + x);\n"
                "        Thread t = new Thread() {\n"
                "            @Override public void run() {\n"
                "                System.out.println(\"Started thread from static initializer block\");\n"
                "                System.out.println(\"Thread Finished\");\n"
                "            }}; t.start();\n"
                "    }\n"
                "    public static void main(String args[]) { }\n"
                "}"</string>
    <string name="index17">"public class LetterCount {\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        String[] strings = {\n"
                "                \"A STITCH IN TIME SAVES NINE\",\n"
                "                \"DON'T EAT YELLOW SNOW\"\n"
                "        };\n"
                "        int[] letterCount = new int[26];\n"
                "        for (int count = 0; count &lt; strings.length; count++) {\n"
                "            String current = strings[count];\n"
                "            char[] letters = current.toCharArray();\n"
                "            for (int count2 = 0; count2 &lt; letters.length; count2++) {\n"
                "                //find the letter while iterating through the strings array\n"
                "                char lett = letters[count2];\n"
                "                if (lett >= 'A' &amp;&amp; lett &lt; = 'Z') {\n"
                "                    //for each index from letterCount array\n"
                "                    //we add one to it when the letter occurs\n"
                "                    //for example if letter is 'A' then we subtract 'A'\n"
                "                    //in order to add one to letter 'A' which will be index 0\n"
                "                    //for 'B' we subtract 'A' to go in index 1 and add in that index\n"
                "                    letterCount[lett - 'A']++;\n"
                "                }\n"
                "            }\n"
                "        for (char count = 'A'; count &lt; = 'Z'; count++) {\n"
                "            //for each index in the letterCount\n"
                "            //we print the count of the letters\n"
                "            //for example if letterCount[count] = 'A' (65) then we subtract 'A' (65)\n"
                "            //and result will be index 0 which is the letter 'A'\n"
                "            //another example: if letterCount[count] = 'B' (66) the we subtract 'A' (65)\n"
                "            //and result will be index 1 which is letter 'B'\n"
                "            System.out.print(count + \": \" +\n"
                "                    letterCount[count - 'A'] + \" \");\n"
                "        }\n"
                "        System.out.println();\n"
                "    }\n"
                "}"</string>
    <string name="index18">"public class LinearSearchClass {\n"
                "    //complexity: O(n)\n"
                "    static void linearSearch(int[] arr, int target) {\n"
                "        int result = Integer.MAX_VALUE;\n"
                "        for (int i = 0; i &lt; arr.length; i++) {\n"
                "            if (arr[i] == target) {\n"
                "                result = i;\n"
                "                System.out.println(arr[i] + \" has been found at index: \" + i);\n"
                "            } else {\n"
                "                System.out.println(\"The value \" + target + \" is not found on index \" + i);\n"
                "            }\n"
                "        }\n"
                "    }\n"
                "\n"
                "    //usage\n"
                "    public static void main(String[] args) {\n"
                "        int[] array = new int[] {1, 2, 3};\n"
                "        linearSearch(array, 3);\n"
                "    }\n"
                "}"</string>
    <string name="index19">"//in order to work, the array elements numbers must be in ascending order\n"
                "    static int binarySearch(int arr[], int x){\n"
                "        int low = 0;\n"
                "        int high = arr.length-1;\n"
                "        int index = Integer.MAX_VALUE;\n"
                "        while(low&lt;=high){\n"
                "            int mid = (low + high)/2;\n"
                "            if (arr[mid]&lt;x){\n"
                "                low = mid + 1;\n"
                "                continue;\n"
                "            } else if (arr[mid]>x) {\n"
                "                high = mid - 1;\n"
                "                continue;\n"
                "            } else if (arr[mid]==x) {\n"
                "                index = mid;\n"
                "                break;\n"
                "            }\n"
                "        }\n"
                "        return index;\n"
                "    }"</string>
    <string name="index20">"public class LongestStringClass {\n"
                "    static String longestWord(String text) {\n"
                "        //all non letters\n"
                "        String[] s = text.split(\"[^a-zA-Z]\");\n"
                "        String t = \"\";\n"
                "        for(int i = 0; i &lt; s.length;i++){\n"
                "            if(s[i].length() > t.length() )\n"
                "                t = s[i];\n"
                "        }\n"
                "        return t;\n"
                "    }\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        String r = longestWord(\"hello world!\");\n"
                "        System.out.println(r);\n"
                "    }\n"
                "}"</string>
    <string name="index21">"static void normalizeText(String example) {\n"
                "        CharSequence normalized_string = Normalizer.normalize(example, Normalizer.Form.NFD);\n"
                "        System.out.println(((String) normalized_string).replaceAll(\"[^\\\\p{ASCII}]\", \"\"));\n"
                "    }\n"
                "\n"
                "\n"
                "    public static void main(String[] args) {\n"
                "        String schon = \"schön\";\n"
                "        normalizeText(schon);\n"
                "    }"</string>
    <string name="index22">"// #option 1\n"
                "public class AwesomeButtonActivity extends AppCompatActivity {\n"
                "    private Button awesomeButton;\n"
                "    @Override\n"
                "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n"
                "        super.onCreate(savedInstanceState);\n"
                "        awesomeButton = new Button(this);\n"
                "\n"
                "        awesomeButton.setOnClickListener(new View.OnClickListener() {\n"
                "            @Override\n"
                "            public void onClick(View v) {\n"
                "                awesomeButtonClicked();\n"
                "            }\n"
                "        });\n"
                "    }\n"
                "    private void awesomeButtonClicked() {\n"
                "        awesomeButton.setText(\"AWESOME!\");\n"
                "    }\n"
                "}\n"
                "// #option 2\n"
                "public class AwesomeButtonActivity extends AppCompatActivity {\n"
                "    private Button awesomeButton; \n"
                "    private View.OnClickListener awesomeOnClickListener = new View.OnClickListener() {\n"
                "        @Override\n"
                "        public void onClick(View v) {\n"
                "            awesomeButtonClicked();\n"
                "        }\n"
                "    };\n"
                "    @Override\n"
                "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n"
                "        super.onCreate(savedInstanceState);\n"
                "        awesomeButton = new Button(this);\n"
                "        awesomeButton.setOnClickListener(awesomeOnClickListener);\n"
                "    }\n"
                "    private void awesomeButtonClicked() {\n"
                "        awesomeButton.setText(\"AWESOME!\");\n"
                "    }\n"
                "}\n"
                "// #option 3\n"
                "public class AwesomeButtonActivity extends AppCompatActivity {\n"
                "    private Button awesomeButton;\n"
                "    @Override\n"
                "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n"
                "        super.onCreate(savedInstanceState);\n"
                "        awesomeButton = new Button(this);\n"
                "\n"
                "        awesomeButton.setOnClickListener(new AwesomeButtonClick());\n"
                "    }\n"
                "    private void awesomeButtonClicked() {\n"
                "        awesomeButton.setText(\"AWESOME!\");\n"
                "    }\n"
                "    class AwesomeButtonClick implements View.OnClickListener {\n"
                "        @Override\n"
                "        public void onClick(View v) {\n"
                "            awesomeButtonClicked();\n"
                "        }\n"
                "    }\n"
                "}\n"
                "// #option 4\n"
                "public class AwesomeButtonActivity extends AppCompatActivity implements View.OnClickListener {\n"
                "    private Button awesomeButton;\n"
                "    @Override\n"
                "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n"
                "        super.onCreate(savedInstanceState);\n"
                "        awesomeButton = new Button(this);\n"
                "\n"
                "        awesomeButton.setOnClickListener(this);\n"
                "    }\n"
                "    @Override\n"
                "    public void onClick(View v) {\n"
                "        awesomeButtonClicked();\n"
                "    }\n"
                "    private void awesomeButtonClicked() {\n"
                "        awesomeButton.setText(\"AWESOME!\");\n"
                "    }\n"
                "}"</string>


    <string name="appbar_scrolling_view_behavior" translatable="false">com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior</string>
    <string name="quit_habit_no_smoke_for_android">QuitHabit! NoSmoke  for Android</string>
    <string name="third_party_licences">Third party licences</string>
    <string name="material_title_example">Material Components For Android</string>
    <string name="material_content_example">Licensed under the Apache License, Version 2.0 (the License);    you may not use this file except in compliance with the License.    You may obtain a copy of the License at         http://www.apache.org/licenses/LICENSE-2.0     Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an AS IS BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</string>
    <string name="version_app">Version 0.2 (200)</string>
    <string name="quit_habit_no_smoke_and_the_quit_habit_logos_are_trademarks"><a href="https://bytao7mao.github.io/quithabit/">Quit Habit! NoSmoke</a> and  the <a href="https://bytao7mao.github.io/quithabit/">Quit Habit! NoSmoke</a>  logos are trademarks of  Marius Nicolae.  All  rights reserved</string>
    <string name="quit_habit_no_smoke_for_android_is_built_using_open_source_software">QuitHabit! NoSmoke for Android is built using  open-source software:</string>
    <string name="licences"><a href="https://bytao7mao.github.io/quithabit/legal/licences.html">licences</a></string>
    <string name="terms_of_service"><a href="https://bytao7mao.github.io/quithabit/legal/terms_and_conditions.html">Terms and Conditions</a></string>

</resources>

